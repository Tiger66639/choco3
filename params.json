{"name":"Choco3","tagline":"An open-source Java library for Constraint Programming","body":"## Choco3 ##\r\n\r\nChoco3 is an open-source Java library for Constraint Programming.\r\n\r\nChoco3 is not the continuation of Choco2, but a completely rewritten version and there is no backward compatibility.\r\n\r\nCurrent stable version is 3.3.1 (11 May 2015).\r\n\r\nChoco3 comes with:\r\n- various type of variables (integer, boolean, set, graph and real),\r\n- various state-of-the-art constraints (alldifferent, count, nvalues, etc.),\r\n- various search strategies, from basic ones (first_fail, smallest, etc.) to most complex (impact-based and activity-based search),\r\n- explanation-based engine, that enables conflict-based back jumping, dynamic backtracking and path repair,\r\n\r\nBut also, facilities to interact with the search loop, factories to help modelling, many samples, etc.\r\n\r\nChoco3 is distributed under BSD licence (Copyright (c) 1999-2015, Ecole des Mines de Nantes).\r\n\r\nContact: choco@mines-nantes.fr\r\n\r\n## Overview ##\r\n\r\n\r\n```java\r\n// 1. Create a Solver\r\nSolver solver = new Solver(\"my first problem\");\r\n// 2. Create variables through the variable factory\r\nIntVar x = VariableFactory.bounded(\"X\", 0, 5, solver);\r\nIntVar y = VariableFactory.bounded(\"Y\", 0, 5, solver);\r\n// 3. Create and post constraints by using constraint factories\r\nsolver.post(IntConstraintFactory.arithm(x, \"+\", y, \"<\", 5));\r\n// 4. Define the search strategy\r\nsolver.set(IntStrategyFactory.lexico_LB(new IntVar[]{x, y}));\r\n// 5. Launch the resolution process\r\nsolver.findSolution();\r\n//6. Print search statistics\r\nChatterbox.printStatistics(solver);\r\n```\r\n\r\n## Download and installation ##\r\n\r\nRequirements:\r\n* JDK 8+ (JDK 7 compliant jars are also available)\r\n* maven 3+\r\n\r\nIn the following, we distinguish two usages of Choco:\r\n\r\n- as a standalone application: the jar file includes all required dependencies and configuration file (that is, `logback.xml`),\r\n- as a library: the jar file excludes all dependencies and configuration file (that is, `logback.xml`).\r\n\r\nThe name of the jar file terms the packaging: `choco-solver-3.3.1-with-dependencies.jar` or `choco-solver-3.3.1.jar`.\r\n\r\nThe jar files can be downloaded from this URL:\r\n\r\n* http://choco-solver.org/?q=Download\r\n\r\n### As a stand-alone application ###\r\n\r\nThe jar file contains all required dependencies (including SLF4J, Logback and logback.xml).\r\nThe next step is simply to add the jar file to your classpath of your application.\r\nNote that if your program depends on dependencies declared in the jar file,\r\nyou should consider using choco as a library.\r\n\r\n### As a library ###\r\n\r\nThe jar file does not contains any dependencies or Logback configuration file,\r\nas of being used as a dependency of another application.\r\nThe next step is to add the jar file to your classpath of your application and add also add the required dependencies.\r\n\r\n\r\n### Inside a maven project ###\r\n\r\nChoco is available on Maven Central Repository.\r\nSo you only have to edit your `pom.xml` to declare the following library dependency:\r\n\r\n```xml\r\n<dependency>\r\n   <groupId>org.choco-solver</groupId>\r\n   <artifactId>choco-solver</artifactId>\r\n   <version>3.3.1</version>\r\n</dependency>\r\n```\r\n\r\n### Dependencies ###\r\n\r\nThe required dependencies for compilation are:\r\n\r\n    org.javabits.jgrapht:jgrapht-core:jar:0.9.3\r\n    dk.brics.automaton:automaton:jar:1.11-8\r\n    args4j:args4j:jar:2.32\r\n    net.sf.trove4j:trove4j:jar:3.0.3\r\n    org.slf4j:slf4j-api:jar:1.7.13\r\n\r\nThey are available on Maven Repository (http://mvnrepository.com/).\r\n\r\n\r\n### Building from sources ###\r\n\r\nThe source of the released versions are directly available in the `Tag` section.\r\nYou can also download them using github features.\r\nOnce downloaded, move to the source directory then execute the following command\r\nto make the jar:\r\n\r\n    $ mvn clean package -DskipTests\r\n\r\nIf the build succeeded, the resulting jar will be automatically\r\ninstalled in your local maven repository and available in the `target` sub-folders.\r\n\r\n===================\r\nThe Choco3 dev team.\r\n\r\n[![githalytics.com alpha](https://cruel-carlota.pagodabox.com/5206b49e3dad062b919d632d75825479 \"githalytics.com\")](http://githalytics.com/chocoteam/choco3)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}